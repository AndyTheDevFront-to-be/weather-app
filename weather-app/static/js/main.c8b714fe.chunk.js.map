{"version":3,"sources":["components/header.js","components/form.js","components/office.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Form","Fade_default","top","onSubmit","this","props","addCity","type","name","placeholder","required","React","Component","API_KEY","Office","state","offices","isLoaded","CITY_ID","componentDidMount","fetch","concat","_this","then","res","json","setState","error","removeCity","id","stringIdNumber","Object","entries","target","indexOffice","indexOf","length","splice","_callee","e","city","country","reg","checkCity","checkCountry","apiCall","data","idAddedCity","idCityNumber","cityExist","regenerator_default","wrap","_context","prev","next","preventDefault","value","test","sent","status","element","some","push","stop","_this2","_this$state","weatherIcon","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","list","Symbol","iterator","done","office","weather","code","icon","WeatherJson","Date","getTime","err","return","components_form","map","x","bottom","key","onClick","Math","round","main","temp","humidity","description","App","header","components_office","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c8b714fe.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => (\n\t<div className =\"text-center\">\n\t\t<h1 className=\"my-4\">Weather app</h1>\n\t</div>\n);\n\nexport default Header;","import React from 'react';\nimport Fade from 'react-reveal/Fade';\n//const Form = props => (\nclass Form extends React.Component{\n\trender() {\n\t\treturn(\n\t\t\t<Fade top>\n\t\t\t\t<form onSubmit={this.props.addCity} className=\"text-center form-add-city\">\n\t\t\t\t\t<input className= \"mx-4\"\n\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\tname=\"city\" \n\t\t\t\t\t\tplaceholder=\"City...\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<input className= \"mx-4\"\n\t\t\t\t\t\ttype=\"text\" \n\t\t\t\t\t\tname=\"country\" \n\t\t\t\t\t\tplaceholder=\"Country...\"\n\t\t\t\t\t\trequired\t\n\t\t\t\t\t/>\n\t\t\t\t\t<button className =\"rounded border-0 text-light\">Add a city</button>\n\t\t\t\t</form>\n\t\t\t</Fade>\n\t\t);\n\t}\n}\n//);\n\n\nexport default Form;","import React, {Component} from 'react';\nimport Form from './form';\nimport Fade from 'react-reveal/Fade';\nimport WeatherJson from '../weather.json';\n\nconst API_KEY = \"d0af787ce26143db370a4a90999e1a63\";\nclass Office extends Component{\n\tstate = {\n\t\toffices:[] ,\n\t\tisLoaded: false,\n\t\tCITY_ID: [\"2618425\",\"2950159\",\"3054643\",\"727011\",\"2158177\",\"5128581\"]\n\t}\n\tcomponentDidMount = () => {\n\t\tfetch(`http://api.openweathermap.org/data/2.5/group?id=${this.state.CITY_ID}&units=metric&appid=${API_KEY}`)\n\t\t\t.then(res => res.json())\n\t\t\t.then(json => {\n\t\t\t\tthis.setState({\n\t\t\t\t\toffices: json,\n\t\t\t\t\tisLoaded: true,\n\t\t\t\t\tCITY_ID: this.state.CITY_ID,\n\t\t\t\t\terror:\"\"\n\t\t\t\t})\n\t\t\t});\n\t}\n\tremoveCity = (id) =>{\n\t\tlet targetIdNumber = Object.entries(id.target);\n\t\tlet idNumber = targetIdNumber[1][1].id;\n\t\tlet stringIdNumber = idNumber + \"\";\n\t\tlet CITY_ID = this.state.CITY_ID;\n\t\tlet indexOffice = CITY_ID.indexOf(stringIdNumber);\n\t\tif(CITY_ID.length>1){\n\t\t\tthis.CITY_ID = CITY_ID.splice(indexOffice, 1);\n\t\t\tfetch(`http://api.openweathermap.org/data/2.5/group?id=${CITY_ID}&units=metric&appid=${API_KEY}`)\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(json => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\toffices: json,\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t};\n\t}\n\n\taddCity = async (e) =>{\n\t\te.preventDefault();\n\t\tlet city = e.target.city.value;\n\t\tlet country = e.target.country.value;\n\t\tvar reg=/^[a-zàäâéèêëïîöôùüû\\s]*$/i;\n\t\tvar checkCity = reg.test(city);\n\t\tvar checkCountry = reg.test(country);\n\n\t\tif(checkCity && checkCountry){\n\t\t\tconst apiCall = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&units=metric&appid=${API_KEY}`);\n\n\t\t\tif(apiCall.status === 200){\n\t\t\t\tconst data = await apiCall.json();\n\t\t\t\tlet idAddedCity = data.id;\n\t\t\t\tlet idCityNumber = idAddedCity + \"\";\n\t\t\t\tlet CITY_ID = this.state.CITY_ID;\n\t\t\t\tvar cityExist = (element) => {\n\t\t\t\t  return element === idCityNumber;\n\t\t\t\t};\n\t\t\t\tif(!CITY_ID.some(cityExist)){\n\t\t\t\t\tif(CITY_ID.length<=19){\n\t\t\t\t\t\tthis.CITY_ID = CITY_ID.push(idCityNumber);\n\t\t\t\t\t\tfetch(`http://api.openweathermap.org/data/2.5/group?id=${CITY_ID}&units=metric&appid=${API_KEY}`)\n\t\t\t\t\t\t\t.then(res => res.json())\n\t\t\t\t\t\t\t.then(json => {\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\toffices: json,\n\t\t\t\t\t\t\t\t\tisLoaded: true,\n\t\t\t\t\t\t\t\t\tCITY_ID: this.state.CITY_ID,\n\t\t\t\t\t\t\t\t\terror: \"\"\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t})\n\t\t\t\t\t}else{\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\terror: \"You cannot add more cities\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\terror: \"This city is already displayed\"\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tthis.setState({\n\t\t\t\t\terror: \"City not found\"\n\t\t\t\t});\n\t\t\t}\n\t\t}else{\n\t\t\tthis.setState({\n\t\t\t\terror: \"This is not a city\"\n\t\t\t});\n\t\t}\n\t}\n\n\trender() {\n\t\tvar { isLoaded, offices } = this.state;\n\t\tvar iconClass;\n\t\tconst weatherIcon = [];\n\t\tif(!isLoaded){\n\t\t\treturn <div></div>;\n\t\t}\n\t\telse {\n\t\t\tfor (let office of offices.list) {\n\t\t\t\ticonClass=office.weather[0].id;\n\t\t\t\tvar prefix = 'wi wi-';\n  \t\t\t\tvar code = office.weather[0].id;\n  \t\t\t\tvar icon = WeatherJson[code].icon;\n\t  \t\t\tif (!(code > 699 && code < 800) && !(code > 899 && code < 1000)) {\n\t  \t\t\t\t var d = new Date();\n  \t\t\t\t\t var n = d.getTime();\n\t    \t\t\ticon = 'day-' + icon;\n\t  \t\t\t}else{\n\t    \t\t\ticon = 'night-' + icon;\n\t  \t\t\t}\n\t  \t\t\ticon = prefix + icon;\n\t  \t\t\tweatherIcon.push(icon);\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<div className=\"office\">\n      \t\t\t\t<Form addCity={this.addCity}/>\n      \t\t\t\t<p className=\"text-center font-weight-bold text-danger\">{this.state.error}</p>\n      \t\t\t\t<div className =\"col-12 office-box my-4\">\n\t\t\t\t\t\t{offices.list.map((office,x) => (\n\t\t\t\t\t\t\t<Fade bottom key={office.id}>\n\t\t\t\t\t\t\t\t<div className=\"tile\" key={office.id}>\n\t\t\t\t\t\t\t\t\t<button className={(this.state.CITY_ID.length>1) ? \"rounded-circle close-button\" : \"d-none rounded-circle close-button\"} id={office.id} onClick={this.removeCity}>X</button>\n\t\t\t\t\t\t\t\t\t<h2 className=\"text-center\">{office.name}</h2>\n\t\t\t\t\t\t\t\t\t<i className={weatherIcon[x++] + \" display-4 mt-4\"}></i>\n\t\t\t\t\t\t\t\t\t<hr/>\n\t\t\t\t\t\t\t\t\t{/*<img src={`http://openweathermap.org/img/w/${office.weather[0].icon}.png`} alt={\"picto \" + office.weather[0].description}/>*/}\n\t\t\t\t\t\t\t\t\t<p className=\"temperature display-4\">{Math.round(office.main.temp)+1}°C </p>\n\t\t\t\t\t\t\t\t\t<p>Humidity: {office.main.humidity}% </p>\n\t\t\t\t\t\t\t\t\t<p className=\"font-weight-bold\"> {office.weather[0].description}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Fade>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default Office;\n","import React from 'react'; // import the react object from react package from package.json\nimport Header from './components/header';\nimport Office from './components/office';\nimport Fade from 'react-reveal/Fade';\n\nclass App extends React.Component{\n    render(){\n      \treturn (\n      \t\t<div className=\"container-fluid py-4\">\n      \t\t\t<Fade top>\n      \t\t\t\t<Header/>\n      \t\t\t</Fade>\n      \t\t\t<Office/>\n      \t\t</div>\n        );\n    }    \n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport './weather-icons.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}